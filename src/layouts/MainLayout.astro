---
import HeadCommon from "../components/HeadCommon.astro"
import HeadSEO from "../components/HeadSEO.astro"
import Header from "../components/Header/Header.astro"
import PageContent from "../components/PageContent/PageContent.astro"
import LeftSidebar from "../components/LeftSidebar/LeftSidebar.astro"
import RightSidebar from "../components/RightSidebar/RightSidebar.astro"
import * as CONFIG from "../config"
import { NewsletterCTA } from "../components/Footer/NewsletterCTA"
import Footer from "~/components/Footer/Footer.astro"

const { frontmatter } = Astro.props

const headings = Astro.props?.headings

const currentPage = new URL(Astro.request.url).pathname

const currentFile = `src/pages${currentPage.replace(/\/$/, "")}${frontmatter?.isIndex ? "/index" : ""}.mdx`
const githubEditUrl = CONFIG.GITHUB_EDIT_URL + currentFile
const formattedContentTitle = frontmatter.title
  ? `${frontmatter.title} | ${CONFIG.SITE.title}`
  : `${CONFIG.PAGE.titleFallback} | ${CONFIG.SITE.title}`

const canonicalURLStr = new URL(Astro.url.pathname, Astro.site).href.replace(/\/+$/, "")
const canonicalURL = new URL(canonicalURLStr)

const includeLinkToWalletScript = !!Astro.props?.frontmatter?.metadata?.linkToWallet
---

<html dir={frontmatter.dir ?? "ltr"} lang={frontmatter.lang ?? "en-us"} class="initial">
  <head>
    <HeadCommon />
    <HeadSEO content={frontmatter} {canonicalURL} />
    <title>{formattedContentTitle}</title>
    <style>
      body {
        width: 100%;
        display: grid;
        grid-template-rows: var(--theme-navbar-height) 1fr;
        --gutter: var(--space-6x);
        --doc-padding: 2rem;
      }

      .layout {
        display: grid;
        grid-auto-flow: column;
        grid-template-columns: 0fr minmax(0, var(--max-width)) 0fr;
        overflow-x: hidden;
      }

      .layout :global(> *) {
        width: 100%;
        height: 100%;
      }

      .grid-sidebar {
        height: 100vh;
        position: sticky;
        top: 0;
        padding: 0;
      }

      #grid-left {
        position: fixed;
        background-color: var(--theme-bg);
        z-index: 10;
        display: none;
      }

      #grid-main {
        padding: var(--doc-padding) var(--gutter);
        grid-column: 2;
        display: flex;
        flex-direction: column;
        height: 100%;
      }

      #grid-right {
        display: none;
      }

      @media (min-width: 50em) {
        .layout {
          overflow: initial;
          grid-template-columns: 18rem minmax(0, var(--max-width));
          gap: 1em;
        }

        #grid-left {
          display: flex;
          position: sticky;
          grid-column: 1;
          background: transparent;
        }
      }

      @media (min-width: 72em) {
        .layout {
          grid-template-columns: 18rem minmax(0, var(--max-width)) 18rem;
          padding-left: 0;
          padding-right: 0;
          margin-left: auto;
          margin-right: auto;
        }

        #grid-right {
          grid-column: 3;
          display: flex;
        }
      }
    </style>
    <style is:global>
      .layout > * {
        width: 100%;
        height: 100%;
      }

      .mobile-sidebar-toggle {
        overflow: hidden;
      }

      .mobile-sidebar-toggle #grid-left {
        display: block;
        top: 2rem;
      }
    </style>
    <script>
      import "../scripts/index.ts"
    </script>
    <script define:vars={{ includeLinkToWalletScript }}>
      window.includeLinkToWalletScript = includeLinkToWalletScript
    </script>
    <script define:vars={{ frontmatter }}>
      const persistedArticle = {
        title: frontmatter.title,
        url: frontmatter.url,
      }

      const recentArticles = JSON.parse(localStorage.getItem("recentArticles") || "[]")

      if (!recentArticles.some((article) => article.url === persistedArticle.url)) {
        recentArticles.unshift(persistedArticle)
        localStorage.setItem("recentArticles", JSON.stringify(recentArticles.slice(0, 5)))
      }
    </script>
  </head>

  <body>
    <Header frontmatter={frontmatter} />
    <main class="layout">
      <aside id="grid-left" class="grid-sidebar" title="Site Navigation">
        <LeftSidebar currentPage={currentPage} content={frontmatter} />
      </aside>
      <div id="grid-main">
        <PageContent
          content={frontmatter}
          githubEditUrl={githubEditUrl}
          {headings}
          clientSideToc={!!frontmatter?.clientSideToc}
        >
          <slot />
        </PageContent>
      </div>
      <aside id="grid-right" class="grid-sidebar" title="Table of Contents">
        <RightSidebar
          content={frontmatter}
          githubEditUrl={githubEditUrl}
          {headings}
          clientSideToc={!!frontmatter?.clientSideToc}
        />
      </aside>
    </main>
    <NewsletterCTA client:visible />
    <Footer />

    <script>
      //@ts-expect-error
      if (window.includeLinkToWalletScript) {
        //@ts-expect-error astro handles the .ts extension
        import("../scripts/link-to-wallet.ts")
      }
    </script>
  </body>
</html>
